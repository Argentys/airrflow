/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
*/

params {
    modules {
        'fastqc' {
            args = "--quiet"
        }
        'fastqc_postassembly' {
            args = "--quiet"
        }
        'multiqc' {
            args = ""
        }
        'changeo_assigngenes_reveal' {
            publish_dir   = 'changeo/assigngenes'
            publish_files = [ 'fmt7':'fmt7', 'log.txt':'logs' ]
            publish_by_id = true
        }
        'changeo_makedb_reveal' {
            publish_dir   = 'changeo/makedb-igblast'
            publish_files = [ 'log':'logs', 'tsv':'tab', 'log.txt':'logs' ]
            publish_by_id = true
        }
        'changeo_parsedb_split_reveal' {
            publish_dir   = 'changeo/productive'
            publish_files = [ 'log':'logs', 'tsv':'tab', 'log.txt':'logs' ]
            publish_by_id = true
        }
        'filter_quality_reveal' {
            publish_dir   = 'changeo/quality-filter'
            publish_files = [ 'log':'logs', 'tsv':'tab', 'log.txt':'logs' ]
            publish_by_id = true
        }
        'remove_chimeric_reveal' {
            publish_dir   = 'changeo/chimera-filter'
            publish_files = [ 'log':'logs', 'tsv':'tab', 'log.txt':'logs', 'report':'reports' ]
            publish_by_id = true
        }
        'single_cell_qc_reveal' {
            publish_dir   = 'changeo/single-cell-qc'
            publish_files = [ 'log':'logs', 'tsv':'tab', 'log.txt':'logs', 'report':'reports' ]
            publish_by_id = true
        }
        'add_metadata_reveal' {
            publish_dir   = 'changeo/metadata-repertoire'
            publish_files = [ 'log':'logs', 'tsv':'tab', 'log.txt':'logs' ]
            publish_by_id = true
        }
    }
}

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

    withName: PRESTO_FILTERSEQ {
        publishDir = [
            path: { "${params.outdir}/presto/01-filterseq/${meta.id}" },
        ]
    }

    withName: PRESTO_FILTERSEQ_POSTASSEMBLY_SANS_UMI {
        publishDir = [
            path: { "${params.outdir}/presto/02-filterseq/${meta.id}" },
        ]
    }

    withName: PRESTO_MASKPRIMERS {
        publishDir = [
            path: { "${params.outdir}/presto/02-maskprimers/${meta.id}" },
        ]
    }

    withName: PRESTO_MASKPRIMERS_POSTASSEMBLY_SANS_UMI {
        publishDir = [
            path: { "${params.outdir}/presto/03-maskprimers/${meta.id}" },
        ]
    }

    withName: PRESTO_PAIRSEQ {
        publishDir = [
            path: { "${params.outdir}/presto/03-pairseq/${meta.id}" },
        ]
    }

    withName: PRESTO_CLUSTERSETS {
        publishDir = [
            path: { "${params.outdir}/presto/04-clustersets/${meta.id}" },
        ]
    }

    withName: PRESTO_PARSE_CLUSTERS {
        publishDir = [
            path: { "${params.outdir}/presto/05-parse-clusters/${meta.id}" },
        ]
    }

    withName: PRESTO_BUILDCONSENSUS {
        publishDir = [
            path: { "${params.outdir}/presto/06-build-consensus/${meta.id}" },
        ]
    }

    withName: PRESTO_POSTCONSENSUS_PAIRSEQ {
        publishDir = [
            path: { "${params.outdir}/presto/07-postconsensus-pairseq/${meta.id}" },
        ]
    }

    withName: PRESTO_ASSEMBLEPAIRS_UMI {
        publishDir = [
            path: { "${params.outdir}/presto/08-assemble-pairs/${meta.id}" },
        ]
    }

    withName: PRESTO_ASSEMBLEPAIRS_SANS_UMI {
        publishDir = [
            path: { "${params.outdir}/presto/01-assemble-pairs/${meta.id}" },
        ]
    }

    withName: PRESTO_PARSEHEADERS_COLLAPSE_UMI {
        publishDir = [
            enable: false
        ]
        ext.subcommand = 'collapse'
        ext.args = '-f CONSCOUNT --act min'
    }

    withName: PRESTO_PARSEHEADERS_PRIMERS_UMI {
        publishDir = [
            enable: false
        ]
        ext.args = 'PRCONS PRCONS'
    }

    withName: PRESTO_PARSEHEADERS_PRIMERS_SANS_UMI {
        publishDir = [
            enable: false
        ]
        ext.args = 'PRIMER PRIMER'
    }

    withName: PRESTO_PARSEHEADERS_METADATA {
        publishDir = [
            enable: false
        ]
    }

    withName: PRESTO_COLLAPSESEQ_UMI {
        publishDir = [
            path: { "${params.outdir}/presto/09-collapseseq/${meta.id}" },
        ]
        ext.args = '-n 20 --inner --uf PRCONS --cf CONSCOUNT --act sum'
        ext.args2 = '-f HEADER DUPCOUNT'
    }

    withName: PRESTO_COLLAPSESEQ_SANS_UMI {
        publishDir = [
            path: { "${params.outdir}/presto/04-collapseseq/${meta.id}" },
        ]
        ext.args = '-n 20 --inner'
        ext.args2 = '-f HEADER DUPCOUNT'
    }

    withName: PRESTO_SPLITSEQ_UMI {
        publishDir = [
            path: { "${params.outdir}/presto/10-splitseq/${meta.id}" },
        ]
        ext.args = '-f CONSCOUNT --num 2'
    }

    withName: PRESTO_SPLITSEQ_SANS_UMI {
        publishDir = [
            path: { "${params.outdir}/presto/05-splitseq/${meta.id}" },
        ]
        ext.args = '-f DUPCOUNT --num 2'
    }

    withName: CHANGEO_ASSIGNGENES {
        publishDir = [
            path: { "${params.outdir}/changeo/01-assign-genes/${meta.id}" },
        ]
    }

    withName: CHANGEO_MAKEDB {
        publishDir = [
            path: { "${params.outdir}/changeo/02-make-db/${meta.id}" },
        ]
        ext.args = '--regions default --format airr'
    }

    withName: CHANGEO_PARSEDB_SPLIT {
        publishDir = [
            path: { "${params.outdir}/changeo/03-parsedb-split/${meta.id}" },
        ]
    }

    withName: CHANGEO_PARSEDB_SELECT {
        publishDir = [
            path: { "${params.outdir}/changeo/04-parsedb-select/${meta.id}" },
        ]
    }

    withName: CHANGEO_CONVERTDB_FASTA {
        publishDir = [
            path: { "${params.outdir}/changeo/05-convertdb-fasta/${meta.id}" },
        ]
    }

    withName: CHANGEO_CONVERTDB_FASTA_FROM_AIRR {
        publishDir = [
            path: { "${params.outdir}/changeo/convert-db/${meta.id}" },
        ]
        ext.args = "--if sequence_id --sf sequence --mf cell_id consensus_count duplicate_count c_call c_cigar c_sequence_start c_sequence_end"
    }

    withName: MERGE_TABLES {
        publishDir = [
            path: { "${params.outdir}/shazam/01-merged-tables/${meta.id}" },
        ]
    }

    withName: SHAZAM_TIGGER_THRESHOLD {
        publishDir = [
            path: { "${params.outdir}/shazam/02-genotyping/${meta.id}" },
        ]
    }

    withName: CHANGEO_DEFINECLONES {
        publishDir = [
            path: { "${params.outdir}/shazam/06-define-clones/${meta.id}" },
        ]
    }

    withName: CHANGEO_CREATEGERMLINES {
        publishDir = [
            path: { "${params.outdir}/shazam/07-create-germlines/${meta.id}" },
        ]
    }

    withName: CHANGEO_BUILDTREES {
        publishDir = [
            path: { "${params.outdir}/shazam/08-build-trees/${meta.id}" },
        ]
    }

    withName: ALAKAZAM_LINEAGE {
        publishDir = [
            path: { "${params.outdir}/lineage-reconstruction/${meta.id}" },
        ]
        ext.args = 'none'
    }

    withName: ALAKAZAM_SHAZAM_REPERTOIRES {
        publishDir = [
            path: { "${params.outdir}/repertoire_analysis/${meta.id}" },
        ]
        ext.args = 'none'
    }

    withName: FETCH_DATABASES {
        publishDir = [
            path: { "${params.outdir}/databases" },
            enable: ${params.save_databases}
        ]
    }

    withName: PARSE_LOGS {
        publishDir = [
            path: { "${params.outdir}/parsed-logs" },
        ]
    }

}
